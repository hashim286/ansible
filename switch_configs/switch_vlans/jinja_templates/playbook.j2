{% for switch in switches %}
- hosts: {{ switch.hostname }} 
  gather_facts: false
  vars_files: 
  - {{ credentials_file_path }}/credentials_{{ switch.os }}.yaml
  vars: 
  {#- connection type is set based on the switch's OS, if junos it uses junos, if it is a cisco device it uses the devices OS name from the vars.yaml file #} 
{%- if switch.os == "junos" %} 
    ansible_connection: ansible.netcommon.netconf
    ansible_network_os: junipernetworks.junos.junos
{%- elif switch.os == "nxos" or switch.os == "ios" %} 
    ansible_connection: ansible.netcommon.network_cli
    ansible_network_os: cisco.{{ switch.os }}.{{ switch.os }} 
{%- endif %} 
{#-username and password fields are filled from the credentials file #}
{%- raw %} 
    ansible_user: "{{ username }}" 
    ansible_password: "{{ password }}" 
{%- endraw %} 
{#-applies to NXOS and IOS devices for now #} 
{%-if switch.os == "nxos" or switch.os == "ios" %} 

  tasks: 
    - name: create directory for backup config if not present
      ansible.builtin.file: 
        path: switch_configs/switch_vlans/backups
        state: directory 
        recurse: yes 
{# saves the current configuration with the switch's hostname or IP address in the directory created above #}     
    - name: backup the current saved configuration 
      cisco.{{ switch.os }}.{{ switch.os }}_config: 
        backup: true
        backup_options: 
          dir_path: switch_configs/switch_vlans/backups/
          filename: backup_{{ switch.hostname }} 
{#-iterate through interfaces described in vars.yaml #} 
{%- for section in switch.interfaces %} 
{%-   if not switch.revert %} 

    - name: enable {{ section.interface }} and set description to {{ section.description }} 
      cisco.{{ switch.os }}.{{ switch.os }}_interfaces: 
        config: 
        - name: {{ section.interface }} 
          enabled: true
          description: {{ section.description }} 
{%-   elif switch.revert %} 
    - name: undoing {{ section.interface }}
      cisco.{{ switch.os }}.{{ switch.os }}_interfaces: 
        config: 
        - name: {{ section.interface }}
          enabled: false
{#- ends the if statement to check for the revert parameter #} 
{%-   endif %} 
{%        if switch.os == "nxos" %}
          mode: layer2
{#-ends the if statement to check if nxos is the os mode and use mode: layer 2, ignore otherwise #}
{%-       endif %} 
{%-     if switch.revert %} 
        state: replaced
{%-     else %} 
        state: merged
{# ends another statement to check for revert parameter and apply the configuration block accordingly #} 
{%-     endif %} 

{# ends the interface loop #} 
{%- endfor %}     

{#-ends if statement to check for switch os #} 
{%-endif %} 
{#-ends the hosts loop #} 
{%-endfor %}  

