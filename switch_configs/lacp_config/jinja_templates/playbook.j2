{% for switch in switches %}

- hosts: {{ switch.hostname }}
  gather_facts: false
  vars_files: 
    - {{ credentials_file_path }}/credentials_{{ switch.os }}.yaml
  vars: 
{# creates differing connection type based on switch os #}
{%- if switch.os == "junos" %}
    ansible_connection: ansible.netcommon.netconf
    ansible_network_os: junipernetworks.junos.junos
{%- elif switch.os == "nxos" or switch.os == "ios"  %}
    ansible_connection: ansible.netcommon.network_cli
    ansible_network_os: cisco.{{ switch.os }}.{{ switch.os }} 
{%- endif %}
{%  raw %}
    ansible_user: "{{ username }}"
    ansible_password: "{{ password }}"
{%  endraw %}
{# section for nxos or ios switch #}

{% if switch.os == "nxos" or switch.os == "ios" %}
  tasks: 
    - name: backup current configuration to backups/
      cisco.{{ switch.os }}.{{ switch.os }}_config: 
        backup: true
        backup_options: 
          dir_path: backups/
          filename: backup_{{ switch.hostname }}

{# deletes any existing port-channel with same number #}
    - name: delete int port-channel {{ switch.channel_num }} 
      cisco.{{ switch.os }}.{{ switch.os }}_config: 
        lines: 
          - no interface port-channel {{ switch.channel_num }} 

{%    for interface in switch.members %}
{# resets participating interfaces to default configuration and sets it as layer 2 port with portfast #}
    - name: reset default interface {{ interface }}
      cisco.{{ switch.os }}.{{ switch.os }}_config: 
        lines: default interface {{ interface }}

    - name: reconfigure as layer2 port
      cisco.{{ switch.os }}.{{ switch.os }}_config: 
        parents: interface {{ interface }}
        lines:
{%-       if switch.os == "nxos"  %} 
        - switchport
{%        endif %} 
        - no shutdown
        - description {{ switch.description }} 
{% 	  if switch.port_mode == "trunk" and switch.os == "nxos"  %}
        - spanning-tree port type edge trunk
{%  	  elif switch.port_mode == "access" and switch.os == "nxos"  %} 
        - spanning-tree port type edge
{% 	  elif switch.port_mode == "trunk" and switch.os == "ios"  %}
        - spanning-tree portfast trunk
{%  	  elif switch.port_mode == "access" and switch.os == "ios"  %} 
        - spanning-tree portfast 
{%- 	  endif %} 

{%    endfor %}

{# creates a LAG with the mode specified in YAML file, uses the same channel defined #}
    - name: configuring LAG with mode {{ switch.lag_mode }}
      cisco.{{ switch.os }}.{{ switch.os }}_lag_interfaces: 
        config: 
          - name: port-channel{{ switch.channel_num }}
            members: 
{%              for interface in switch.members %}
              - member: {{ interface }}
                mode: {{ switch.lag_mode }}
{%              endfor %}

{# configures port-channel interface to use the switchport configurations defined in yaml #} 
    - name: configuring Po{{ switch.channel_num }} as {{ switch.port_mode }} vlan {{ switch.vlan }}
      cisco.{{ switch.os }}.{{ switch.os }}_config: 
        lines:
{%-       if switch.os == "nxos" %} 
        - switchport
{%        endif %} 
        - description {{ switch.description }} LAG
{%-       if switch.port_mode == "trunk" %} 
        - switchport mode trunk
        - switchport trunk allowed vlan {{ switch.vlan }}
{%-       elif switch.port_mode == "access" %} 
        - switchport mode access
        - switchport access vlan {{ switch.vlan }}
{%-      endif %} 
{%	  if switch.port_mode == "trunk" and switch.os == "nxos"  %}
        - spanning-tree port type edge trunk
{% 	  elif switch.port_mode == "access" and switch.os == "nxos"  %} 
        - spanning-tree port type edge
{%	  elif switch.port_mode == "trunk" and switch.os == "ios"  %}
        - spanning-tree portfast trunk
{% 	  elif switch.port_mode == "access" and switch.os == "ios"  %} 
        - spanning-tree portfast 
{%-	  endif %} 
        - no shutdown
        parents: interface Port-Channel{{ switch.channel_num }}
{% endif %}

    - name: save configuration 
      cisco.{{ switch.os }}.{{ switch.os }}_config: 
        save_when: modified
{% endfor %}

    
